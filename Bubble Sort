#include <iostream>
#include <vector>

void bubbleSort(std::vector<int>& arr) {
    int n = arr.size();
    bool swapped;

    // Traverse through all array elements
    for (int i = 0; i < n - 1; i++) {
        swapped = false; // Initialize swapped as false

        // Last i elements are already in place
        for (int j = 0; j < n - i - 1; j++) {
            // Compare adjacent elements
            if (arr[j] > arr[j + 1]) {
                // Swap if they are in the wrong order
                std::swap(arr[j], arr[j + 1]);
                swapped = true; // Set swapped to true
            }
        }
// If no two elements were swapped by inner loop, then break
        if (!swapped) {
            break;
        }
    }
}

void printArray(const std::vector<int>& arr) {
    for (int num : arr) {
        std::cout << num << " ";
    }
    std::cout << std::endl;
}

int main() {
    std::vector<int> arr;

    // Input the number of elements
    int n;
    std::cout << "Enter the number of elements: ";
    std::cin >> n;

// Input the elements
    std::cout << "Enter the elements: ";
    for (int i = 0; i < n; i++) {
        int element;
        std::cin >> element;
        arr.push_back(element);
    }

    std::cout << "Original array: ";
    printArray(arr);

    // Sort the array using bubble sort
    bubbleSort(arr);

    std::cout << "Sorted array: ";
    printArray(arr);

    return 0;
}
